using Com.ACSCorp.Accelerator.ApplicationAnalyzer.Models;
using Com.ACSCorp.Accelerator.ApplicationAnalyzer.Models.DTO;
using Com.ACSCorp.Accelerator.Core.Models;
using Com.ACSCorp.Accelerator.Core.Repository.Abstraction.Interfaces;

using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace Com.ACSCorp.Accelerator.ApplicationAnalyzer.IRepository
{
    public interface IVulnerabilityStatisticsRepository : IBaseRepository
    {
        public Task<bool> SaveVulnerabilityStatisticsAsync(List<VulnerabilityStatisticsDTO> vulnerabilityStatistics);
        public Task<List<ListItem<int>>> GetVulnerabilitiesBySeverityAsync(DashboardRequest dashboardRequest);
        public Task<List<ProjectSeverityVulnerabilityModel>> GetVulnerabilitiesBySeverityAsync(DashboardRequest dashboardRequest, IEnumerable<int> projectIds = null);
        public Task<List<ListItem<int>>> GetVulnerabilitiesByTypeAsync(DashboardRequest dashboardRequest);
        public Task<DateTime?> GetLastScannedOnAsync(DashboardRequest dashboardRequest);
        public Task<List<RecentScanDTO>> GetRecentScansAsync(DashboardRequest dashboardRequest);
        public Task<int> GetScansCompletedAsync(DashboardRequest dashboardRequest);
        public Task<List<VulnerabilityTrendDTO>> GetVulnerabilityTrendAsync(DashboardRequest dashboardRequest);
    }
}
