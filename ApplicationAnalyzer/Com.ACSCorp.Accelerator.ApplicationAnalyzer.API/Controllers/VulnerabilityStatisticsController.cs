using Com.ACSCorp.Accelerator.ApplicationAnalyzer.IService;
using Com.ACSCorp.Accelerator.ApplicationAnalyzer.Models;
using Com.ACSCorp.Accelerator.ApplicationAnalyzer.Models.DTO;

using Microsoft.AspNetCore.Mvc;

using System.Collections.Generic;
using System.Threading.Tasks;

namespace Com.ACSCorp.Accelerator.ApplicationAnalyzer.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class VulnerabilityStatisticsController : BaseController
    {
        private readonly IVulnerabilityStatisticsService _vulnerabilityStatisticsService;

        public VulnerabilityStatisticsController(IVulnerabilityStatisticsService vulnerabilityStatisticsService)
        {
            _vulnerabilityStatisticsService = vulnerabilityStatisticsService;
        }

        [HttpPost("Post")]
        public async Task<IActionResult> Post(List<VulnerabilityStatisticsDTO> vulnerabilityStatistics)
        {
            var result = await _vulnerabilityStatisticsService.SaveVulnerabilityStatisticsAsync(vulnerabilityStatistics);
            return GetActionResult(result);
        }

        [HttpPost("GetVulnerabilitiesBySeverity​")]
        public async Task<IActionResult> GetVulnerabilitiesBySeverityAsync(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetVulnerabilitiesBySeverityAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetVulnerabilitiesByType​")]
        public async Task<IActionResult> GetVulnerabilitiesByTypeAsync(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetVulnerabilitiesByTypeAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetLastScannedOn​")]
        public async Task<IActionResult> GetLastScannedOnAsync(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetLastScannedOnAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetRecentScanList")]
        public async Task<IActionResult> GetRecentScansAsync(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetRecentScansAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetScansSummary​")]
        public async Task<IActionResult> GetScansSummary​Async(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetScansSummaryAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetVulnerabilityTrend​")]
        public async Task<IActionResult> GetVulnerabilityTrendAsync(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetVulnerabilityTrendAsync(dashboardRequest);
            return GetActionResult(result);
        }

        [HttpPost("GetMyProjects​")]
        public async Task<IActionResult> GetMyProjects(DashboardRequest dashboardRequest)
        {
            var result = await _vulnerabilityStatisticsService.GetMyProjectsWithVulnerabilitiesAsync(dashboardRequest);
            return GetActionResult(result);
        }
    }
}